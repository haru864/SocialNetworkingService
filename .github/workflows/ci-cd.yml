name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cleanup unused Docker images and containers
        run: |
          docker system prune -af --volumes
          docker builder prune -a -f

      - name: Debug secret
        run: |
          echo "${{ secrets.PORTFOLIO_EC2_HOST }}"
          echo "${{ secrets.PORTFOLIO_EC2_USER }}"
          echo "${{ secrets.PORTFOLIO_EC2_ACCESS_KEY }}"
          echo "${{ secrets.MYSQL_VARIABLES_ENV }}"
          echo "${{ secrets.PHP_ENV_PRIVATE }}"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PORTFOLIO_EC2_HOST }}
          username: ${{ secrets.PORTFOLIO_EC2_USER }}
          key: ${{ secrets.PORTFOLIO_EC2_ACCESS_KEY }}
          script: |
            export APP_DIR=/var/www/sns
            export PHP_DIR=/var/www/sns/php
            export NEXTJS_DIR=/var/www/sns/nextjs
            export NODEJS_DIR=/var/www/sns/nodejs
            export MYSQL_DIR=/var/www/sns/mysql

            if [ -d "$APP_DIR" ]; then
              sudo rm -rf $APP_DIR
            fi

            sudo mkdir -p $APP_DIR
            sudo git clone https://github.com/haru864/SocialNetworkingService.git $APP_DIR

            cd $APP_DIR
            sudo touch mysql-variables.env
            sudo chmod 777 mysql-variables.env
            echo ${{ secrets.MYSQL_VARIABLES_ENV }} > mysql-variables.env

            cd $MYSQL_DIR
            sudo mkdir data
            sudo chmod 777 ./data/

            cd $PHP_DIR
            sudo mkdir log/
            sudo mkdir public/images/
            sudo mkdir public/videos/
            sudo mkdir public/nextjs/
            sudo mkdir vendor/
            sudo chmod 777 log/
            sudo chmod 777 public/images/
            sudo chmod 777 public/videos/
            sudo chmod 777 public/nextjs/
            sudo chmod 777 vendor/
            composer install
            echo ${{ secrets.PHP_ENV_PRIVATE }} > config/.env.private

            cd $NODEJS_DIR
            sudo mkdir log
            sudo mkdir dist
            sudo chmod 777 log
            sudo chmod 777 dist
            sudo npm install
            tsc

            sudo chown -R ubuntu:www-data $APP_DIR
            sudo chmod -R 775 $APP_DIR

            cd $APP_DIR
            docker compose up --build
